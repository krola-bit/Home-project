import os
import sys
from wake_word_detector import WakeWordDetector  # √âbreszt≈ë sz√≥ figyel≈ë
from user_authenticator import UserAuthenticator  # Azonos√≠t√°si modul
from shutdown_handler import ShutdownHandler  # Le√°ll√≠t√°s kezel≈ë
from command_handler import handle_user_commands  # K√©r√©sek √©s utas√≠t√°sok kezel√©se

# Glob√°lis v√°ltoz√≥k
detector = None
authenticator = None
shutdown_handler = None  # √öj le√°ll√≠t√°si kezel≈ë objektum

def main():
    """A program bel√©p√©si pontja."""
    global detector, authenticator, shutdown_handler
    access_key = os.getenv("PORCUPINE_ACCESS_KEY")
    if not access_key:
        raise ValueError("Hi√°nyzik a Porcupine 'access_key'. √Åll√≠tsd be k√∂rnyezeti v√°ltoz√≥k√©nt!")

    # √âbreszt≈ë sz√≥ √©s azonos√≠t√°s kezel≈ë objektumok inicializ√°l√°sa
    detector = WakeWordDetector(access_key)
    authenticator = UserAuthenticator()
    shutdown_handler = ShutdownHandler(detector, authenticator)  # Le√°ll√≠t√°s kezel≈ë inicializ√°l√°sa

    while True:
        # Az √©breszt≈ë sz√≥ra v√°r√°s, √©s PCM adatok visszaad√°sa
        pcm_data = detector.wait_for_wake_word()  # üöÄ V√°r az √©breszt≈ë sz√≥ra √©s PCM adatokat ad vissza

        # PCM adatok √°tad√°sa az autentik√°ci√≥s modulnak
        user = authenticator.authenticate_user(pcm_data)  # üîë Felhaszn√°l√≥ azonos√≠t√°sa

        if user:
            os.system(f'say "Mit szeretn√©l, {user}?"')
            # Itt lehet≈ës√©g van tov√°bbi parancsok vagy k√©r√©sek kezel√©s√©re
            handle_user_commands(user)  # ‚û°Ô∏è √Åtir√°ny√≠t√°s a k√©r√©sek vagy utas√≠t√°sok kezel√©s√©re

if __name__ == "__main__":
    main()

